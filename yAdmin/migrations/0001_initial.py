# Generated by Django 2.2.17 on 2020-12-18 23:09

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='SysCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_id', models.IntegerField(db_column='CityId')),
                ('citycode', models.CharField(blank=True, db_column='CityCode', max_length=20, null=True)),
                ('cityname', models.CharField(blank=True, db_column='CityName', max_length=30, null=True)),
                ('provincecode', models.CharField(blank=True, db_column='ProvinceCode', max_length=20, null=True)),
            ],
            options={
                'db_table': 'sys_city',
            },
        ),
        migrations.CreateModel(
            name='SysDictionary',
            fields=[
                ('dic_id', models.AutoField(db_column='Dic_ID', primary_key=True, serialize=False)),
                ('config', models.CharField(blank=True, db_column='Config', max_length=4000, null=True)),
                ('createdate', models.DateTimeField(blank=True, db_column='CreateDate', null=True)),
                ('createid', models.IntegerField(blank=True, db_column='CreateID', null=True)),
                ('creator', models.CharField(blank=True, db_column='Creator', max_length=30, null=True)),
                ('dbserver', models.CharField(blank=True, db_column='DBServer', max_length=4000, null=True)),
                ('dbsql', models.CharField(blank=True, db_column='DbSql', max_length=4000, null=True)),
                ('dicname', models.CharField(db_column='DicName', max_length=100)),
                ('dicno', models.CharField(db_column='DicNo', max_length=100)),
                ('enable', models.IntegerField(db_column='Enable')),
                ('modifier', models.CharField(blank=True, db_column='Modifier', max_length=30, null=True)),
                ('modifydate', models.DateTimeField(blank=True, db_column='ModifyDate', null=True)),
                ('modifyid', models.IntegerField(blank=True, db_column='ModifyID', null=True)),
                ('orderno', models.IntegerField(blank=True, db_column='OrderNo', null=True)),
                ('parentid', models.IntegerField(db_column='ParentId')),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=2000, null=True)),
            ],
            options={
                'db_table': 'sys_dictionary',
            },
        ),
        migrations.CreateModel(
            name='SysDictionarylist',
            fields=[
                ('diclist_id', models.AutoField(db_column='DicList_ID', primary_key=True, serialize=False)),
                ('createdate', models.DateTimeField(blank=True, db_column='CreateDate', null=True)),
                ('createid', models.IntegerField(blank=True, db_column='CreateID', null=True)),
                ('creator', models.CharField(blank=True, db_column='Creator', max_length=30, null=True)),
                ('dicname', models.CharField(blank=True, db_column='DicName', max_length=100, null=True)),
                ('dicvalue', models.CharField(blank=True, db_column='DicValue', max_length=100, null=True)),
                ('dic_id', models.IntegerField(blank=True, db_column='Dic_ID', null=True)),
                ('enable', models.IntegerField(blank=True, db_column='Enable', null=True)),
                ('modifier', models.CharField(blank=True, db_column='Modifier', max_length=30, null=True)),
                ('modifydate', models.DateTimeField(blank=True, db_column='ModifyDate', null=True)),
                ('modifyid', models.IntegerField(blank=True, db_column='ModifyID', null=True)),
                ('orderno', models.IntegerField(blank=True, db_column='OrderNo', null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=2000, null=True)),
            ],
            options={
                'db_table': 'sys_dictionarylist',
            },
        ),
        migrations.CreateModel(
            name='SysLog',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('begindate', models.DateTimeField(blank=True, db_column='BeginDate', null=True)),
                ('browsertype', models.CharField(blank=True, db_column='BrowserType', max_length=200, null=True)),
                ('elapsedtime', models.IntegerField(blank=True, db_column='ElapsedTime', null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('exceptioninfo', models.TextField(blank=True, db_column='ExceptionInfo', null=True)),
                ('logtype', models.CharField(blank=True, db_column='LogType', max_length=50, null=True)),
                ('requestparameter', models.TextField(blank=True, db_column='RequestParameter', null=True)),
                ('responseparameter', models.TextField(blank=True, db_column='ResponseParameter', null=True)),
                ('role_id', models.IntegerField(blank=True, db_column='Role_Id', null=True)),
                ('serviceip', models.CharField(blank=True, db_column='ServiceIP', max_length=100, null=True)),
                ('success', models.IntegerField(blank=True, db_column='Success', null=True)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=4000, null=True)),
                ('userip', models.CharField(blank=True, db_column='UserIP', max_length=100, null=True)),
                ('username', models.CharField(blank=True, db_column='UserName', max_length=4000, null=True)),
                ('user_id', models.IntegerField(blank=True, db_column='User_Id', null=True)),
            ],
            options={
                'db_table': 'sys_log',
            },
        ),
        migrations.CreateModel(
            name='SysMenu',
            fields=[
                ('menuId', models.AutoField(db_column='Menu_Id', primary_key=True, serialize=False)),
                ('menuName', models.CharField(db_column='MenuName', max_length=50)),
                ('auth', models.CharField(blank=True, db_column='Auth', max_length=4000, null=True)),
                ('icon', models.CharField(blank=True, db_column='Icon', max_length=50, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=200, null=True)),
                ('enable', models.IntegerField(blank=True, db_column='Enable', null=True)),
                ('orderNo', models.IntegerField(blank=True, db_column='OrderNo', null=True)),
                ('tableName', models.CharField(blank=True, db_column='TableName', max_length=200, null=True)),
                ('parentId', models.IntegerField(db_column='ParentId')),
                ('url', models.CharField(blank=True, db_column='Url', max_length=4000, null=True)),
                ('createDate', models.DateTimeField(auto_now_add=True, db_column='CreateDate', null=True)),
                ('creator', models.CharField(blank=True, db_column='Creator', max_length=50, null=True)),
                ('modifyDate', models.DateTimeField(auto_now=True, db_column='ModifyDate', null=True)),
                ('modifier', models.CharField(blank=True, db_column='Modifier', max_length=50, null=True)),
            ],
            options={
                'db_table': 'sys_menu',
            },
        ),
        migrations.CreateModel(
            name='SysProvince',
            fields=[
                ('province_id', models.AutoField(db_column='ProvinceId', primary_key=True, serialize=False)),
                ('provincecode', models.CharField(db_column='ProvinceCode', max_length=20)),
                ('provincename', models.CharField(db_column='ProvinceName', max_length=30)),
                ('regioncode', models.CharField(blank=True, db_column='RegionCode', max_length=20, null=True)),
            ],
            options={
                'db_table': 'sys_province',
            },
        ),
        migrations.CreateModel(
            name='SysRole',
            fields=[
                ('roleId', models.AutoField(db_column='Role_Id', primary_key=True, serialize=False)),
                ('createDate', models.DateTimeField(auto_now_add=True, db_column='CreateDate', null=True)),
                ('creator', models.CharField(blank=True, db_column='Creator', max_length=50, null=True)),
                ('deleteBy', models.CharField(blank=True, db_column='DeleteBy', max_length=50, null=True)),
                ('deptName', models.CharField(blank=True, db_column='DeptName', max_length=50, null=True)),
                ('deptId', models.IntegerField(blank=True, db_column='Dept_Id', null=True)),
                ('enable', models.IntegerField(blank=True, db_column='Enable', null=True)),
                ('modifier', models.CharField(blank=True, db_column='Modifier', max_length=50, null=True)),
                ('modifyDate', models.DateTimeField(auto_now=True, db_column='ModifyDate', null=True)),
                ('orderNo', models.IntegerField(blank=True, db_column='OrderNo', null=True)),
                ('parentId', models.IntegerField(db_column='ParentId')),
                ('roleName', models.CharField(blank=True, db_column='RoleName', max_length=50, null=True)),
            ],
            options={
                'db_table': 'sys_role',
            },
        ),
        migrations.CreateModel(
            name='SysRoleauth',
            fields=[
                ('authId', models.AutoField(db_column='Auth_Id', primary_key=True, serialize=False)),
                ('authvalue', models.CharField(db_column='AuthValue', max_length=1000)),
                ('createDate', models.DateTimeField(auto_now_add=True, db_column='CreateDate', null=True)),
                ('creator', models.CharField(blank=True, db_column='Creator', max_length=1000, null=True)),
                ('menuId', models.IntegerField(db_column='Menu_Id')),
                ('modifier', models.CharField(blank=True, db_column='Modifier', max_length=1000, null=True)),
                ('modifyDate', models.DateTimeField(auto_now=True, db_column='ModifyDate', null=True)),
                ('roleId', models.IntegerField(blank=True, db_column='Role_Id', null=True)),
                ('userId', models.IntegerField(blank=True, db_column='User_Id', null=True)),
            ],
            options={
                'db_table': 'sys_roleauth',
            },
        ),
        migrations.CreateModel(
            name='SysRoleauthdata',
            fields=[
                ('authId', models.IntegerField(db_column='Auth_Id', primary_key=True, serialize=False)),
                ('datatypeId', models.IntegerField(blank=True, db_column='DataType_Id', null=True)),
                ('roleId', models.IntegerField(blank=True, db_column='Role_Id', null=True)),
                ('userId', models.IntegerField(blank=True, db_column='User_Id', null=True)),
                ('nodeId', models.CharField(blank=True, db_column='Node_Id', max_length=50, null=True)),
                ('levelId', models.IntegerField(blank=True, db_column='LevelID', null=True)),
                ('authValue', models.CharField(blank=True, db_column='AuthValue', max_length=4000, null=True)),
                ('creator', models.CharField(blank=True, db_column='Creator', max_length=50, null=True)),
                ('createDate', models.DateTimeField(auto_now_add=True, db_column='CreateDate', null=True)),
                ('modifier', models.CharField(blank=True, db_column='Modifier', max_length=50, null=True)),
                ('modifyDate', models.DateTimeField(auto_now=True, db_column='ModifyDate', null=True)),
            ],
            options={
                'db_table': 'sys_roleauthdata',
            },
        ),
        migrations.CreateModel(
            name='SysUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userId', models.AutoField(db_column='User_Id', primary_key=True, serialize=False)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=200, null=True)),
                ('apptype', models.IntegerField(blank=True, db_column='AppType', null=True)),
                ('auditDate', models.DateTimeField(blank=True, db_column='AuditDate', null=True)),
                ('auditStatus', models.IntegerField(blank=True, db_column='AuditStatus', null=True)),
                ('auditor', models.CharField(blank=True, db_column='Auditor', max_length=200, null=True)),
                ('createDate', models.DateTimeField(auto_now_add=True, db_column='CreateDate', null=True)),
                ('createId', models.IntegerField(blank=True, db_column='CreateID', null=True)),
                ('creator', models.CharField(blank=True, db_column='Creator', max_length=200, null=True)),
                ('deptName', models.CharField(blank=True, db_column='DeptName', max_length=150, null=True)),
                ('deptId', models.IntegerField(blank=True, db_column='Dept_Id', null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=100, null=True)),
                ('enable', models.IntegerField(db_column='Enable', default=0)),
                ('gender', models.IntegerField(blank=True, db_column='Gender', null=True)),
                ('headImageUrl', models.CharField(blank=True, db_column='HeadImageUrl', max_length=200, null=True)),
                ('isRegregisterPhone', models.IntegerField(db_column='IsRegregisterPhone', default=0)),
                ('lastLoginDate', models.DateTimeField(blank=True, db_column='LastLoginDate', null=True)),
                ('lastModifyPwdDate', models.DateTimeField(blank=True, db_column='LastModifyPwdDate', null=True)),
                ('mobile', models.CharField(blank=True, db_column='Mobile', max_length=100, null=True)),
                ('modifier', models.CharField(blank=True, db_column='Modifier', max_length=200, null=True)),
                ('modifyDate', models.DateTimeField(auto_now=True, db_column='ModifyDate', null=True)),
                ('modifyId', models.IntegerField(blank=True, db_column='ModifyID', null=True)),
                ('orderNo', models.IntegerField(blank=True, db_column='OrderNo', null=True)),
                ('roleId', models.IntegerField(db_column='Role_Id', default=0)),
                ('roleName', models.CharField(db_column='RoleName', max_length=150)),
                ('phoneNo', models.CharField(blank=True, db_column='PhoneNo', max_length=11, null=True)),
                ('remark', models.CharField(blank=True, db_column='Remark', max_length=200, null=True)),
                ('tel', models.CharField(blank=True, db_column='Tel', max_length=20, null=True)),
                ('nickName', models.CharField(db_column='UserTrueName', max_length=20)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=255, null=True, unique=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=255, null=True)),
                ('token', models.CharField(blank=True, db_column='Token', max_length=500, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'sys_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
